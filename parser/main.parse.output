Terminals unused in grammar

    FUNC
    FOR
    WHILE
    IF
    ELSE
    INCREASE
    DECREASE
    ADDASSIGN
    SUBASSIGN
    EQUAL
    NOTEQUAL
    LESS
    GREATER
    LESSEQUAL
    GREATEREQUAL
    AND
    OR
    LBRACE
    RBRACE


State 0 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program EOL
    3        | program stmt_list EOL
    4        | stmt EOL

    5 stmt_list: stmt_list stmt
    6          | stmt

    7 stmt: VAR IDENTIFIER ASSIGN expr SEMICOLON
    8     | PRINT LPAREN expr RPAREN SEMICOLON
    9     | RETURN expr SEMICOLON

   10 IDENTIFIER: ID

   11 expr: expr ADD expr
   12     | expr SUB expr
   13     | expr MUL expr
   14     | expr DIV expr
   15     | expr MOD expr
   16     | LPAREN expr RPAREN
   17     | INTEGER
   18     | FLOAT
   19     | STRING
   20     | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <inum> (258) 17
    FLOAT <fnum> (259) 18
    ID <str> (260) 10
    STRING <str> (261) 19
    VAR (262) 7
    PRINT (263) 8
    FUNC (264)
    FOR (265)
    WHILE (266)
    IF (267)
    ELSE (268)
    RETURN (269) 9
    ADD (270) 11
    SUB (271) 12
    MUL (272) 13
    DIV (273) 14
    MOD (274) 15
    ASSIGN (275) 7
    INCREASE (276)
    DECREASE (277)
    ADDASSIGN (278)
    SUBASSIGN (279)
    EQUAL (280)
    NOTEQUAL (281)
    LESS (282)
    GREATER (283)
    LESSEQUAL (284)
    GREATEREQUAL (285)
    AND (286)
    OR (287)
    LPAREN (288) 8 16
    RPAREN (289) 8 16
    LBRACE (290)
    RBRACE (291)
    SEMICOLON (292) 7 8 9
    EOL (293) 2 3 4


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program <node> (40)
        on left: 1 2 3 4
        on right: 0 2 3
    stmt_list <node> (41)
        on left: 5 6
        on right: 3 5
    stmt <stmt> (42)
        on left: 7 8 9
        on right: 4 5 6
    IDENTIFIER <IDENTIFIER> (43)
        on left: 10
        on right: 7 20
    expr <expr> (44)
        on left: 11 12 13 14 15 16 17 18 19 20
        on right: 7 8 9 11 12 13 14 15 16


State 0

    0 $accept: • program $end
    1 program: ε •  [$end, VAR, PRINT, RETURN, EOL]
    2        | • program EOL
    3        | • program stmt_list EOL
    4        | • stmt EOL
    7 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
    8     | • PRINT LPAREN expr RPAREN SEMICOLON
    9     | • RETURN expr SEMICOLON

    VAR     shift, and go to state 1
    PRINT   shift, and go to state 2
    RETURN  shift, and go to state 3

    VAR       [reduce using rule 1 (program)]
    PRINT     [reduce using rule 1 (program)]
    RETURN    [reduce using rule 1 (program)]
    $default  reduce using rule 1 (program)

    program  go to state 4
    stmt     go to state 5

    shift/reduce conflict on token VAR:
        1 program: ε •
        7 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
      Example: • VAR IDENTIFIER ASSIGN expr SEMICOLON EOL
      Shift derivation
        program
        ↳ 4: stmt                                        EOL
             ↳ 7: • VAR IDENTIFIER ASSIGN expr SEMICOLON
      Reduce derivation
        program
        ↳ 3: program  stmt_list                                      EOL
             ↳ 1: ε • ↳ 6: stmt
                           ↳ 7: VAR IDENTIFIER ASSIGN expr SEMICOLON

    shift/reduce conflict on token PRINT:
        1 program: ε •
        8 stmt: • PRINT LPAREN expr RPAREN SEMICOLON
      Example: • PRINT LPAREN expr RPAREN SEMICOLON EOL
      Shift derivation
        program
        ↳ 4: stmt                                      EOL
             ↳ 8: • PRINT LPAREN expr RPAREN SEMICOLON
      Reduce derivation
        program
        ↳ 3: program  stmt_list                                    EOL
             ↳ 1: ε • ↳ 6: stmt
                           ↳ 8: PRINT LPAREN expr RPAREN SEMICOLON

    shift/reduce conflict on token RETURN:
        1 program: ε •
        9 stmt: • RETURN expr SEMICOLON
      Example: • RETURN expr SEMICOLON EOL
      Shift derivation
        program
        ↳ 4: stmt                         EOL
             ↳ 9: • RETURN expr SEMICOLON
      Reduce derivation
        program
        ↳ 3: program  stmt_list                       EOL
             ↳ 1: ε • ↳ 6: stmt
                           ↳ 9: RETURN expr SEMICOLON



State 1

    7 stmt: VAR • IDENTIFIER ASSIGN expr SEMICOLON
   10 IDENTIFIER: • ID

    ID  shift, and go to state 6

    IDENTIFIER  go to state 7


State 2

    8 stmt: PRINT • LPAREN expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 8


State 3

    9 stmt: RETURN • expr SEMICOLON
   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 14


State 4

    0 $accept: program • $end
    2 program: program • EOL
    3        | program • stmt_list EOL
    5 stmt_list: • stmt_list stmt
    6          | • stmt
    7 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
    8     | • PRINT LPAREN expr RPAREN SEMICOLON
    9     | • RETURN expr SEMICOLON

    $end    shift, and go to state 15
    VAR     shift, and go to state 1
    PRINT   shift, and go to state 2
    RETURN  shift, and go to state 3
    EOL     shift, and go to state 16

    stmt_list  go to state 17
    stmt       go to state 18


State 5

    4 program: stmt • EOL

    EOL  shift, and go to state 19


State 6

   10 IDENTIFIER: ID •

    $default  reduce using rule 10 (IDENTIFIER)


State 7

    7 stmt: VAR IDENTIFIER • ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 20


State 8

    8 stmt: PRINT LPAREN • expr RPAREN SEMICOLON
   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 21


State 9

   17 expr: INTEGER •

    $default  reduce using rule 17 (expr)


State 10

   18 expr: FLOAT •

    $default  reduce using rule 18 (expr)


State 11

   19 expr: STRING •

    $default  reduce using rule 19 (expr)


State 12

   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   16     | LPAREN • expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 22


State 13

   20 expr: IDENTIFIER •

    $default  reduce using rule 20 (expr)


State 14

    9 stmt: RETURN expr • SEMICOLON
   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr

    ADD        shift, and go to state 23
    SUB        shift, and go to state 24
    MUL        shift, and go to state 25
    DIV        shift, and go to state 26
    MOD        shift, and go to state 27
    SEMICOLON  shift, and go to state 28


State 15

    0 $accept: program $end •

    $default  accept


State 16

    2 program: program EOL •

    $default  reduce using rule 2 (program)


State 17

    3 program: program stmt_list • EOL
    5 stmt_list: stmt_list • stmt
    7 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
    8     | • PRINT LPAREN expr RPAREN SEMICOLON
    9     | • RETURN expr SEMICOLON

    VAR     shift, and go to state 1
    PRINT   shift, and go to state 2
    RETURN  shift, and go to state 3
    EOL     shift, and go to state 29

    stmt  go to state 30


State 18

    6 stmt_list: stmt •

    $default  reduce using rule 6 (stmt_list)


State 19

    4 program: stmt EOL •

    $default  reduce using rule 4 (program)


State 20

    7 stmt: VAR IDENTIFIER ASSIGN • expr SEMICOLON
   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 31


State 21

    8 stmt: PRINT LPAREN expr • RPAREN SEMICOLON
   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr

    ADD     shift, and go to state 23
    SUB     shift, and go to state 24
    MUL     shift, and go to state 25
    DIV     shift, and go to state 26
    MOD     shift, and go to state 27
    RPAREN  shift, and go to state 32


State 22

   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr
   16     | LPAREN expr • RPAREN

    ADD     shift, and go to state 23
    SUB     shift, and go to state 24
    MUL     shift, and go to state 25
    DIV     shift, and go to state 26
    MOD     shift, and go to state 27
    RPAREN  shift, and go to state 33


State 23

   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   11     | expr ADD • expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 34


State 24

   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   12     | expr SUB • expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 35


State 25

   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   13     | expr MUL • expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 36


State 26

   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   14     | expr DIV • expr
   15     | • expr MOD expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 37


State 27

   10 IDENTIFIER: • ID
   11 expr: • expr ADD expr
   12     | • expr SUB expr
   13     | • expr MUL expr
   14     | • expr DIV expr
   15     | • expr MOD expr
   15     | expr MOD • expr
   16     | • LPAREN expr RPAREN
   17     | • INTEGER
   18     | • FLOAT
   19     | • STRING
   20     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    STRING   shift, and go to state 11
    LPAREN   shift, and go to state 12

    IDENTIFIER  go to state 13
    expr        go to state 38


State 28

    9 stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 29

    3 program: program stmt_list EOL •

    $default  reduce using rule 3 (program)


State 30

    5 stmt_list: stmt_list stmt •

    $default  reduce using rule 5 (stmt_list)


State 31

    7 stmt: VAR IDENTIFIER ASSIGN expr • SEMICOLON
   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr

    ADD        shift, and go to state 23
    SUB        shift, and go to state 24
    MUL        shift, and go to state 25
    DIV        shift, and go to state 26
    MOD        shift, and go to state 27
    SEMICOLON  shift, and go to state 39


State 32

    8 stmt: PRINT LPAREN expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 33

   16 expr: LPAREN expr RPAREN •

    $default  reduce using rule 16 (expr)


State 34

   11 expr: expr • ADD expr
   11     | expr ADD expr •  [ADD, SUB, RPAREN, SEMICOLON]
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr

    MUL  shift, and go to state 25
    DIV  shift, and go to state 26
    MOD  shift, and go to state 27

    $default  reduce using rule 11 (expr)

    Conflict between rule 11 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 11 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 11 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 11 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 11 and token MOD resolved as shift (ADD < MOD).


State 35

   11 expr: expr • ADD expr
   12     | expr • SUB expr
   12     | expr SUB expr •  [ADD, SUB, RPAREN, SEMICOLON]
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr

    MUL  shift, and go to state 25
    DIV  shift, and go to state 26
    MOD  shift, and go to state 27

    $default  reduce using rule 12 (expr)

    Conflict between rule 12 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 12 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 12 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 12 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 12 and token MOD resolved as shift (SUB < MOD).


State 36

   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   13     | expr MUL expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]
   14     | expr • DIV expr
   15     | expr • MOD expr

    $default  reduce using rule 13 (expr)

    Conflict between rule 13 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 13 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 13 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 13 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 13 and token MOD resolved as reduce (%left MOD).


State 37

   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   14     | expr DIV expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]
   15     | expr • MOD expr

    $default  reduce using rule 14 (expr)

    Conflict between rule 14 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 14 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 14 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 14 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 14 and token MOD resolved as reduce (%left MOD).


State 38

   11 expr: expr • ADD expr
   12     | expr • SUB expr
   13     | expr • MUL expr
   14     | expr • DIV expr
   15     | expr • MOD expr
   15     | expr MOD expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]

    $default  reduce using rule 15 (expr)

    Conflict between rule 15 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 15 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 15 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 15 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 15 and token MOD resolved as reduce (%left MOD).


State 39

    7 stmt: VAR IDENTIFIER ASSIGN expr SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 40

    8 stmt: PRINT LPAREN expr RPAREN SEMICOLON •

    $default  reduce using rule 8 (stmt)
