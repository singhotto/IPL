Terminals unused in grammar

    FUNC
    FOR
    WHILE
    IF
    ELSE
    INCREASE
    DECREASE
    ADDASSIGN
    SUBASSIGN
    EQUAL
    NOTEQUAL
    LESS
    GREATER
    LESSEQUAL
    GREATEREQUAL
    AND
    OR
    LBRACE
    RBRACE


State 19 conflicts: 1 shift/reduce
State 34 conflicts: 5 shift/reduce
State 35 conflicts: 5 shift/reduce
State 36 conflicts: 5 shift/reduce
State 37 conflicts: 5 shift/reduce
State 38 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program stmt_list EOL
    2        | stmt EOL

    3 stmt_list: stmt_list stmt
    4          | stmt

    5 stmt: VAR IDENTIFIER ASSIGN expr SEMICOLON
    6     | PRINT LPAREN expr RPAREN SEMICOLON
    7     | PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    8     | RETURN expr SEMICOLON

    9 IDENTIFIER: ID

   10 expr: expr ADD expr
   11     | expr SUB expr
   12     | expr MUL expr
   13     | expr DIV expr
   14     | expr MOD expr
   15     | LPAREN expr RPAREN
   16     | INTEGER
   17     | FLOAT
   18     | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <inum> (258) 16
    FLOAT <fnum> (259) 17
    ID <str> (260) 9
    VAR (261) 5
    PRINT (262) 6 7
    FUNC (263)
    FOR (264)
    WHILE (265)
    IF (266)
    ELSE (267)
    RETURN (268) 8
    ADD (269) 10
    SUB (270) 11
    MUL (271) 12
    DIV (272) 13
    MOD (273) 14
    ASSIGN (274) 5
    INCREASE (275)
    DECREASE (276)
    ADDASSIGN (277)
    SUBASSIGN (278)
    EQUAL (279)
    NOTEQUAL (280)
    LESS (281)
    GREATER (282)
    LESSEQUAL (283)
    GREATEREQUAL (284)
    AND (285)
    OR (286)
    LPAREN (287) 6 7 15
    RPAREN (288) 6 7 15
    LBRACE (289)
    RBRACE (290)
    SEMICOLON (291) 5 6 7 8
    EOL (292) 1 2


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program <node> (39)
        on left: 1 2
        on right: 0 1
    stmt_list <node> (40)
        on left: 3 4
        on right: 1 3
    stmt <stmt> (41)
        on left: 5 6 7 8
        on right: 2 3 4
    IDENTIFIER <IDENTIFIER> (42)
        on left: 9
        on right: 5 7 18
    expr <expr> (43)
        on left: 10 11 12 13 14 15 16 17 18
        on right: 5 6 8 10 11 12 13 14 15


State 0

    0 $accept: • program $end
    1 program: • program stmt_list EOL
    2        | • stmt EOL
    5 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
    6     | • PRINT LPAREN expr RPAREN SEMICOLON
    7     | • PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    8     | • RETURN expr SEMICOLON

    VAR     shift, and go to state 1
    PRINT   shift, and go to state 2
    RETURN  shift, and go to state 3

    program  go to state 4
    stmt     go to state 5


State 1

    5 stmt: VAR • IDENTIFIER ASSIGN expr SEMICOLON
    9 IDENTIFIER: • ID

    ID  shift, and go to state 6

    IDENTIFIER  go to state 7


State 2

    6 stmt: PRINT • LPAREN expr RPAREN SEMICOLON
    7     | PRINT • LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN  shift, and go to state 8


State 3

    8 stmt: RETURN • expr SEMICOLON
    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 13


State 4

    0 $accept: program • $end
    1 program: program • stmt_list EOL
    3 stmt_list: • stmt_list stmt
    4          | • stmt
    5 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
    6     | • PRINT LPAREN expr RPAREN SEMICOLON
    7     | • PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    8     | • RETURN expr SEMICOLON

    $end    shift, and go to state 14
    VAR     shift, and go to state 1
    PRINT   shift, and go to state 2
    RETURN  shift, and go to state 3

    stmt_list  go to state 15
    stmt       go to state 16


State 5

    2 program: stmt • EOL

    EOL  shift, and go to state 17


State 6

    9 IDENTIFIER: ID •

    $default  reduce using rule 9 (IDENTIFIER)


State 7

    5 stmt: VAR IDENTIFIER • ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 18


State 8

    6 stmt: PRINT LPAREN • expr RPAREN SEMICOLON
    7     | PRINT LPAREN • IDENTIFIER RPAREN SEMICOLON
    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 19
    expr        go to state 20


State 9

   16 expr: INTEGER •

    $default  reduce using rule 16 (expr)


State 10

   17 expr: FLOAT •

    $default  reduce using rule 17 (expr)


State 11

    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   15     | LPAREN • expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 21


State 12

   18 expr: IDENTIFIER •

    $default  reduce using rule 18 (expr)


State 13

    8 stmt: RETURN expr • SEMICOLON
   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr

    ADD        shift, and go to state 22
    SUB        shift, and go to state 23
    MUL        shift, and go to state 24
    DIV        shift, and go to state 25
    MOD        shift, and go to state 26
    SEMICOLON  shift, and go to state 27


State 14

    0 $accept: program $end •

    $default  accept


State 15

    1 program: program stmt_list • EOL
    3 stmt_list: stmt_list • stmt
    5 stmt: • VAR IDENTIFIER ASSIGN expr SEMICOLON
    6     | • PRINT LPAREN expr RPAREN SEMICOLON
    7     | • PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    8     | • RETURN expr SEMICOLON

    VAR     shift, and go to state 1
    PRINT   shift, and go to state 2
    RETURN  shift, and go to state 3
    EOL     shift, and go to state 28

    stmt  go to state 29


State 16

    4 stmt_list: stmt •

    $default  reduce using rule 4 (stmt_list)


State 17

    2 program: stmt EOL •

    $default  reduce using rule 2 (program)


State 18

    5 stmt: VAR IDENTIFIER ASSIGN • expr SEMICOLON
    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 30


State 19

    7 stmt: PRINT LPAREN IDENTIFIER • RPAREN SEMICOLON
   18 expr: IDENTIFIER •  [ADD, SUB, MUL, DIV, MOD, RPAREN]

    RPAREN  shift, and go to state 31

    RPAREN    [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)

    shift/reduce conflict on token RPAREN:
       18 expr: IDENTIFIER •
        7 stmt: PRINT LPAREN IDENTIFIER • RPAREN SEMICOLON
      Example: PRINT LPAREN IDENTIFIER • RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 7: PRINT LPAREN IDENTIFIER • RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 6: PRINT LPAREN expr               RPAREN SEMICOLON
                          ↳ 18: IDENTIFIER •



State 20

    6 stmt: PRINT LPAREN expr • RPAREN SEMICOLON
   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr

    ADD     shift, and go to state 22
    SUB     shift, and go to state 23
    MUL     shift, and go to state 24
    DIV     shift, and go to state 25
    MOD     shift, and go to state 26
    RPAREN  shift, and go to state 32


State 21

   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr
   15     | LPAREN expr • RPAREN

    ADD     shift, and go to state 22
    SUB     shift, and go to state 23
    MUL     shift, and go to state 24
    DIV     shift, and go to state 25
    MOD     shift, and go to state 26
    RPAREN  shift, and go to state 33


State 22

    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   10     | expr ADD • expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 34


State 23

    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   11     | expr SUB • expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 35


State 24

    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   12     | expr MUL • expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 36


State 25

    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   13     | expr DIV • expr
   14     | • expr MOD expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 37


State 26

    9 IDENTIFIER: • ID
   10 expr: • expr ADD expr
   11     | • expr SUB expr
   12     | • expr MUL expr
   13     | • expr DIV expr
   14     | • expr MOD expr
   14     | expr MOD • expr
   15     | • LPAREN expr RPAREN
   16     | • INTEGER
   17     | • FLOAT
   18     | • IDENTIFIER

    INTEGER  shift, and go to state 9
    FLOAT    shift, and go to state 10
    ID       shift, and go to state 6
    LPAREN   shift, and go to state 11

    IDENTIFIER  go to state 12
    expr        go to state 38


State 27

    8 stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 28

    1 program: program stmt_list EOL •

    $default  reduce using rule 1 (program)


State 29

    3 stmt_list: stmt_list stmt •

    $default  reduce using rule 3 (stmt_list)


State 30

    5 stmt: VAR IDENTIFIER ASSIGN expr • SEMICOLON
   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr

    ADD        shift, and go to state 22
    SUB        shift, and go to state 23
    MUL        shift, and go to state 24
    DIV        shift, and go to state 25
    MOD        shift, and go to state 26
    SEMICOLON  shift, and go to state 39


State 31

    7 stmt: PRINT LPAREN IDENTIFIER RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 32

    6 stmt: PRINT LPAREN expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 41


State 33

   15 expr: LPAREN expr RPAREN •

    $default  reduce using rule 15 (expr)


State 34

   10 expr: expr • ADD expr
   10     | expr ADD expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr

    ADD  shift, and go to state 22
    SUB  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    ADD       [reduce using rule 10 (expr)]
    SUB       [reduce using rule 10 (expr)]
    MUL       [reduce using rule 10 (expr)]
    DIV       [reduce using rule 10 (expr)]
    MOD       [reduce using rule 10 (expr)]
    $default  reduce using rule 10 (expr)

    shift/reduce conflict on token ADD:
       10 expr: expr ADD expr •
       10 expr: expr • ADD expr
      Example: expr ADD expr • ADD expr
      Shift derivation
        expr
        ↳ 10: expr ADD expr
                       ↳ 10: expr • ADD expr
      Reduce derivation
        expr
        ↳ 10: expr                  ADD expr
              ↳ 10: expr ADD expr •

    shift/reduce conflict on token SUB:
       10 expr: expr ADD expr •
       11 expr: expr • SUB expr
      Example: expr ADD expr • SUB expr
      Shift derivation
        expr
        ↳ 10: expr ADD expr
                       ↳ 11: expr • SUB expr
      Reduce derivation
        expr
        ↳ 11: expr                  SUB expr
              ↳ 10: expr ADD expr •

    shift/reduce conflict on token MUL:
       10 expr: expr ADD expr •
       12 expr: expr • MUL expr
      Example: expr ADD expr • MUL expr
      Shift derivation
        expr
        ↳ 10: expr ADD expr
                       ↳ 12: expr • MUL expr
      Reduce derivation
        expr
        ↳ 12: expr                  MUL expr
              ↳ 10: expr ADD expr •

    shift/reduce conflict on token DIV:
       10 expr: expr ADD expr •
       13 expr: expr • DIV expr
      Example: expr ADD expr • DIV expr
      Shift derivation
        expr
        ↳ 10: expr ADD expr
                       ↳ 13: expr • DIV expr
      Reduce derivation
        expr
        ↳ 13: expr                  DIV expr
              ↳ 10: expr ADD expr •

    shift/reduce conflict on token MOD:
       10 expr: expr ADD expr •
       14 expr: expr • MOD expr
      Example: expr ADD expr • MOD expr
      Shift derivation
        expr
        ↳ 10: expr ADD expr
                       ↳ 14: expr • MOD expr
      Reduce derivation
        expr
        ↳ 14: expr                  MOD expr
              ↳ 10: expr ADD expr •



State 35

   10 expr: expr • ADD expr
   11     | expr • SUB expr
   11     | expr SUB expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr

    ADD  shift, and go to state 22
    SUB  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    ADD       [reduce using rule 11 (expr)]
    SUB       [reduce using rule 11 (expr)]
    MUL       [reduce using rule 11 (expr)]
    DIV       [reduce using rule 11 (expr)]
    MOD       [reduce using rule 11 (expr)]
    $default  reduce using rule 11 (expr)

    shift/reduce conflict on token ADD:
       11 expr: expr SUB expr •
       10 expr: expr • ADD expr
      Example: expr SUB expr • ADD expr
      Shift derivation
        expr
        ↳ 11: expr SUB expr
                       ↳ 10: expr • ADD expr
      Reduce derivation
        expr
        ↳ 10: expr                  ADD expr
              ↳ 11: expr SUB expr •

    shift/reduce conflict on token SUB:
       11 expr: expr SUB expr •
       11 expr: expr • SUB expr
      Example: expr SUB expr • SUB expr
      Shift derivation
        expr
        ↳ 11: expr SUB expr
                       ↳ 11: expr • SUB expr
      Reduce derivation
        expr
        ↳ 11: expr                  SUB expr
              ↳ 11: expr SUB expr •

    shift/reduce conflict on token MUL:
       11 expr: expr SUB expr •
       12 expr: expr • MUL expr
      Example: expr SUB expr • MUL expr
      Shift derivation
        expr
        ↳ 11: expr SUB expr
                       ↳ 12: expr • MUL expr
      Reduce derivation
        expr
        ↳ 12: expr                  MUL expr
              ↳ 11: expr SUB expr •

    shift/reduce conflict on token DIV:
       11 expr: expr SUB expr •
       13 expr: expr • DIV expr
      Example: expr SUB expr • DIV expr
      Shift derivation
        expr
        ↳ 11: expr SUB expr
                       ↳ 13: expr • DIV expr
      Reduce derivation
        expr
        ↳ 13: expr                  DIV expr
              ↳ 11: expr SUB expr •

    shift/reduce conflict on token MOD:
       11 expr: expr SUB expr •
       14 expr: expr • MOD expr
      Example: expr SUB expr • MOD expr
      Shift derivation
        expr
        ↳ 11: expr SUB expr
                       ↳ 14: expr • MOD expr
      Reduce derivation
        expr
        ↳ 14: expr                  MOD expr
              ↳ 11: expr SUB expr •



State 36

   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   12     | expr MUL expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]
   13     | expr • DIV expr
   14     | expr • MOD expr

    ADD  shift, and go to state 22
    SUB  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    ADD       [reduce using rule 12 (expr)]
    SUB       [reduce using rule 12 (expr)]
    MUL       [reduce using rule 12 (expr)]
    DIV       [reduce using rule 12 (expr)]
    MOD       [reduce using rule 12 (expr)]
    $default  reduce using rule 12 (expr)

    shift/reduce conflict on token ADD:
       12 expr: expr MUL expr •
       10 expr: expr • ADD expr
      Example: expr MUL expr • ADD expr
      Shift derivation
        expr
        ↳ 12: expr MUL expr
                       ↳ 10: expr • ADD expr
      Reduce derivation
        expr
        ↳ 10: expr                  ADD expr
              ↳ 12: expr MUL expr •

    shift/reduce conflict on token SUB:
       12 expr: expr MUL expr •
       11 expr: expr • SUB expr
      Example: expr MUL expr • SUB expr
      Shift derivation
        expr
        ↳ 12: expr MUL expr
                       ↳ 11: expr • SUB expr
      Reduce derivation
        expr
        ↳ 11: expr                  SUB expr
              ↳ 12: expr MUL expr •

    shift/reduce conflict on token MUL:
       12 expr: expr MUL expr •
       12 expr: expr • MUL expr
      Example: expr MUL expr • MUL expr
      Shift derivation
        expr
        ↳ 12: expr MUL expr
                       ↳ 12: expr • MUL expr
      Reduce derivation
        expr
        ↳ 12: expr                  MUL expr
              ↳ 12: expr MUL expr •

    shift/reduce conflict on token DIV:
       12 expr: expr MUL expr •
       13 expr: expr • DIV expr
      Example: expr MUL expr • DIV expr
      Shift derivation
        expr
        ↳ 12: expr MUL expr
                       ↳ 13: expr • DIV expr
      Reduce derivation
        expr
        ↳ 13: expr                  DIV expr
              ↳ 12: expr MUL expr •

    shift/reduce conflict on token MOD:
       12 expr: expr MUL expr •
       14 expr: expr • MOD expr
      Example: expr MUL expr • MOD expr
      Shift derivation
        expr
        ↳ 12: expr MUL expr
                       ↳ 14: expr • MOD expr
      Reduce derivation
        expr
        ↳ 14: expr                  MOD expr
              ↳ 12: expr MUL expr •



State 37

   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   13     | expr DIV expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]
   14     | expr • MOD expr

    ADD  shift, and go to state 22
    SUB  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    ADD       [reduce using rule 13 (expr)]
    SUB       [reduce using rule 13 (expr)]
    MUL       [reduce using rule 13 (expr)]
    DIV       [reduce using rule 13 (expr)]
    MOD       [reduce using rule 13 (expr)]
    $default  reduce using rule 13 (expr)

    shift/reduce conflict on token ADD:
       13 expr: expr DIV expr •
       10 expr: expr • ADD expr
      Example: expr DIV expr • ADD expr
      Shift derivation
        expr
        ↳ 13: expr DIV expr
                       ↳ 10: expr • ADD expr
      Reduce derivation
        expr
        ↳ 10: expr                  ADD expr
              ↳ 13: expr DIV expr •

    shift/reduce conflict on token SUB:
       13 expr: expr DIV expr •
       11 expr: expr • SUB expr
      Example: expr DIV expr • SUB expr
      Shift derivation
        expr
        ↳ 13: expr DIV expr
                       ↳ 11: expr • SUB expr
      Reduce derivation
        expr
        ↳ 11: expr                  SUB expr
              ↳ 13: expr DIV expr •

    shift/reduce conflict on token MUL:
       13 expr: expr DIV expr •
       12 expr: expr • MUL expr
      Example: expr DIV expr • MUL expr
      Shift derivation
        expr
        ↳ 13: expr DIV expr
                       ↳ 12: expr • MUL expr
      Reduce derivation
        expr
        ↳ 12: expr                  MUL expr
              ↳ 13: expr DIV expr •

    shift/reduce conflict on token DIV:
       13 expr: expr DIV expr •
       13 expr: expr • DIV expr
      Example: expr DIV expr • DIV expr
      Shift derivation
        expr
        ↳ 13: expr DIV expr
                       ↳ 13: expr • DIV expr
      Reduce derivation
        expr
        ↳ 13: expr                  DIV expr
              ↳ 13: expr DIV expr •

    shift/reduce conflict on token MOD:
       13 expr: expr DIV expr •
       14 expr: expr • MOD expr
      Example: expr DIV expr • MOD expr
      Shift derivation
        expr
        ↳ 13: expr DIV expr
                       ↳ 14: expr • MOD expr
      Reduce derivation
        expr
        ↳ 14: expr                  MOD expr
              ↳ 13: expr DIV expr •



State 38

   10 expr: expr • ADD expr
   11     | expr • SUB expr
   12     | expr • MUL expr
   13     | expr • DIV expr
   14     | expr • MOD expr
   14     | expr MOD expr •  [ADD, SUB, MUL, DIV, MOD, RPAREN, SEMICOLON]

    ADD  shift, and go to state 22
    SUB  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    ADD       [reduce using rule 14 (expr)]
    SUB       [reduce using rule 14 (expr)]
    MUL       [reduce using rule 14 (expr)]
    DIV       [reduce using rule 14 (expr)]
    MOD       [reduce using rule 14 (expr)]
    $default  reduce using rule 14 (expr)

    shift/reduce conflict on token ADD:
       14 expr: expr MOD expr •
       10 expr: expr • ADD expr
      Example: expr MOD expr • ADD expr
      Shift derivation
        expr
        ↳ 14: expr MOD expr
                       ↳ 10: expr • ADD expr
      Reduce derivation
        expr
        ↳ 10: expr                  ADD expr
              ↳ 14: expr MOD expr •

    shift/reduce conflict on token SUB:
       14 expr: expr MOD expr •
       11 expr: expr • SUB expr
      Example: expr MOD expr • SUB expr
      Shift derivation
        expr
        ↳ 14: expr MOD expr
                       ↳ 11: expr • SUB expr
      Reduce derivation
        expr
        ↳ 11: expr                  SUB expr
              ↳ 14: expr MOD expr •

    shift/reduce conflict on token MUL:
       14 expr: expr MOD expr •
       12 expr: expr • MUL expr
      Example: expr MOD expr • MUL expr
      Shift derivation
        expr
        ↳ 14: expr MOD expr
                       ↳ 12: expr • MUL expr
      Reduce derivation
        expr
        ↳ 12: expr                  MUL expr
              ↳ 14: expr MOD expr •

    shift/reduce conflict on token DIV:
       14 expr: expr MOD expr •
       13 expr: expr • DIV expr
      Example: expr MOD expr • DIV expr
      Shift derivation
        expr
        ↳ 14: expr MOD expr
                       ↳ 13: expr • DIV expr
      Reduce derivation
        expr
        ↳ 13: expr                  DIV expr
              ↳ 14: expr MOD expr •

    shift/reduce conflict on token MOD:
       14 expr: expr MOD expr •
       14 expr: expr • MOD expr
      Example: expr MOD expr • MOD expr
      Shift derivation
        expr
        ↳ 14: expr MOD expr
                       ↳ 14: expr • MOD expr
      Reduce derivation
        expr
        ↳ 14: expr                  MOD expr
              ↳ 14: expr MOD expr •



State 39

    5 stmt: VAR IDENTIFIER ASSIGN expr SEMICOLON •

    $default  reduce using rule 5 (stmt)


State 40

    7 stmt: PRINT LPAREN IDENTIFIER RPAREN SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 41

    6 stmt: PRINT LPAREN expr RPAREN SEMICOLON •

    $default  reduce using rule 6 (stmt)
