#ifndef ALL_HEADERS_HH
#define ALL_HEADERS_HH
#include "stmt/ReturnStmt.hh"
#include "stmt/DefFunc.hh"
#include "stmt/DefVar.hh"
#include "stmt/assignment/Assign.hh"
#include "stmt/assignment/AddAssign.hh"
#include "stmt/assignment/SubAssign.hh"
#include "stmt/assignment/DivAssign.hh"
#include "stmt/assignment/MulAssign.hh"
#include "stmt/assignment/Decrease.hh"
#include "stmt/assignment/Increase.hh"
#include "stmt/Block.hh"
#include "stmt/ForLoop.hh"
#include "stmt/PrintExpr.hh"
#include "stmt/Ifelse.hh"
#include "stmt/Statement.hh"
#include "stmt/Ifcond.hh"
#include "Interpreter.hh"
#include "Visitor.hh"
#include "expr/Expr.hh"
#include "expr/value/Int.hh"
#include "expr/value/String.hh"
#include "expr/value/Id.hh"
#include "expr/value/Number.hh"
#include "expr/value/Float.hh"
#include "expr/value/Bool.hh"
#include "expr/arithmatic/MulExpr.hh"
#include "expr/arithmatic/BinaryExpr.hh"
#include "expr/arithmatic/SubtExpr.hh"
#include "expr/arithmatic/DivExpr.hh"
#include "expr/arithmatic/AddExpr.hh"
#include "expr/arithmatic/ModExpr.hh"
#include "expr/boolean/LessEqual.hh"
#include "expr/boolean/BoolExpr.hh"
#include "expr/boolean/And.hh"
#include "expr/boolean/NotEqual.hh"
#include "expr/boolean/Greater.hh"
#include "expr/boolean/Less.hh"
#include "expr/boolean/Equal.hh"
#include "expr/boolean/GreaterEqual.hh"
#include "expr/boolean/Or.hh"
#include "expr/CallFunc.hh"
#include "Value.hh"
#include "Node.hh"
#include "ExecContext.hh"
#include "IPLFactory.hh"
#endif // ALL_HEADERS_HH
